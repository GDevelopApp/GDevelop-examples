{
  "firstLayout": "",
  "gdVersion": {
    "build": 99,
    "major": 4,
    "minor": 0,
    "revision": 0
  },
  "properties": {
    "adaptGameResolutionAtRuntime": true,
    "folderProject": false,
    "orientation": "landscape",
    "packageName": "com.example.areasampling",
    "projectUuid": "3a36cb30-5b8b-4caa-8333-99979c331ba2",
    "scaleMode": "linear",
    "sizeOnStartupMode": "adaptWidth",
    "useExternalSourceFiles": false,
    "version": "1.0.0",
    "name": "Random points in area",
    "author": "hawkbyte",
    "windowWidth": 800,
    "windowHeight": 600,
    "latestCompilationDirectory": "",
    "maxFPS": 60,
    "minFPS": 20,
    "verticalSync": false,
    "platformSpecificAssets": {},
    "loadingScreen": {
      "showGDevelopSplash": true
    },
    "extensionProperties": [],
    "platforms": [
      {
        "name": "GDevelop JS platform"
      }
    ],
    "currentPlatform": "GDevelop JS platform"
  },
  "resources": {
    "resources": [
      {
        "alwaysLoaded": false,
        "file": "SamplePoint-1.png",
        "kind": "image",
        "metadata": "",
        "name": "SamplePoint-1.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "CircleTarget-1.png",
        "kind": "image",
        "metadata": "",
        "name": "CircleTarget-1.png",
        "smoothed": true,
        "userAdded": false
      },
      {
        "alwaysLoaded": false,
        "file": "SquareTarget-1.png",
        "kind": "image",
        "metadata": "",
        "name": "SquareTarget-1.png",
        "smoothed": true,
        "userAdded": true
      }
    ],
    "resourceFolders": []
  },
  "objects": [
    {
      "name": "SamplePoint",
      "tags": "",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "behaviors": [],
      "animations": [
        {
          "name": "SamplePoint",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.07999999821186066,
              "sprites": [
                {
                  "hasCustomCollisionMask": false,
                  "image": "SamplePoint-1.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "objectsGroups": [],
  "variables": [],
  "layouts": [
    {
      "b": 209,
      "disableInputWhenNotFocused": true,
      "mangledName": "Circle_32sampling",
      "name": "Circle sampling",
      "oglFOV": 90,
      "oglZFar": 500,
      "oglZNear": 1,
      "r": 209,
      "standardSortMethod": true,
      "stopSoundsOnStartup": true,
      "title": "",
      "v": 209,
      "uiSettings": {
        "grid": false,
        "gridB": 255,
        "gridG": 180,
        "gridHeight": 32,
        "gridOffsetX": 0,
        "gridOffsetY": 0,
        "gridR": 158,
        "gridType": "rectangular",
        "gridWidth": 32,
        "snap": true,
        "windowMask": false,
        "zoomFactor": 1
      },
      "objectsGroups": [],
      "variables": [
        {
          "name": "NbSamples",
          "type": "number",
          "value": 1000
        }
      ],
      "instances": [
        {
          "angle": 0,
          "customSize": true,
          "height": 150,
          "layer": "",
          "locked": false,
          "name": "SquareTarget",
          "persistentUuid": "a44f932d-1841-4bb7-9e2f-fdf1ec630e63",
          "width": 150,
          "x": 150,
          "y": 100,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 150,
          "layer": "",
          "locked": false,
          "name": "NaiveCircleTarget",
          "persistentUuid": "8a6037cb-4b59-49d8-897d-5046d07d8f25",
          "width": 150,
          "x": 450,
          "y": 100,
          "zOrder": 2,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 150,
          "layer": "",
          "locked": false,
          "name": "UniformPowerCircleTarget",
          "persistentUuid": "c6d03740-065a-40a7-be82-50b2794fd2f8",
          "width": 150,
          "x": 150,
          "y": 350,
          "zOrder": 3,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 150,
          "layer": "",
          "locked": false,
          "name": "UniformRejectionCircleTarget",
          "persistentUuid": "46df2e23-fccf-4144-b6ae-bc448b7f21b0",
          "width": 150,
          "x": 450,
          "y": 350,
          "zOrder": 4,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "SquareLegend",
          "persistentUuid": "9f5905ae-4646-40d9-8d7c-f1c935f47afe",
          "width": 0,
          "x": 139,
          "y": 65,
          "zOrder": 5,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "NaiveCircleLegend",
          "persistentUuid": "b4d822d3-06d5-43cf-8374-786f83c35bb6",
          "width": 0,
          "x": 374,
          "y": 47,
          "zOrder": 6,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "UniformRejectionLegend",
          "persistentUuid": "041b31ef-07bf-4186-abbb-da780a1ea7e9",
          "width": 0,
          "x": 424,
          "y": 508,
          "zOrder": 7,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "UniformPowerLegend",
          "persistentUuid": "c7342497-f626-405f-99a5-b29c77966dcc",
          "width": 0,
          "x": 112,
          "y": 513,
          "zOrder": 8,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        }
      ],
      "objects": [
        {
          "name": "SquareTarget",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [],
          "animations": [
            {
              "name": "SquareTarget",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.07999999821186066,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "SquareTarget-1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "SquareLegend",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Uniform over square",
          "font": "",
          "characterSize": 20,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        },
        {
          "name": "NaiveCircleTarget",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "LatestRandomDistance",
              "type": "number",
              "value": 0
            },
            {
              "name": "LatestRandomAngle",
              "type": "number",
              "value": 0
            }
          ],
          "behaviors": [],
          "animations": [
            {
              "name": "",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "CircleTarget-1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "NaiveCircleLegend",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Circle, random distance and angle\n Note denser samples near centre",
          "font": "",
          "characterSize": 20,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        },
        {
          "name": "UniformRejectionCircleTarget",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "LatestX",
              "type": "number",
              "value": 0
            },
            {
              "name": "LatestY",
              "type": "number",
              "value": 0
            }
          ],
          "behaviors": [],
          "animations": [
            {
              "name": "",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "CircleTarget-1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "UniformRejectionLegend",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "  Uniform over circle\nGenerate over square,\ndiscard if outside circle",
          "font": "",
          "characterSize": 20,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        },
        {
          "name": "UniformPowerCircleTarget",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "LatestRandomDistance",
              "type": "number",
              "value": 0
            },
            {
              "name": "LatestRandomAngle",
              "type": "string",
              "value": "0"
            }
          ],
          "behaviors": [],
          "animations": [
            {
              "name": "",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "CircleTarget-1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "bold": false,
          "italic": false,
          "name": "UniformPowerLegend",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "     Uniform over circle\nRadius follows power law",
          "font": "",
          "characterSize": 20,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        }
      ],
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Different methods for generating points inside a circle\nFor example: generate items near a spawner",
          "comment2": ""
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "NbObjet"
              },
              "parameters": [
                "SamplePoint",
                "<",
                "4 * Variable(NbSamples)"
              ],
              "subInstructions": []
            }
          ],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Square, for comparison\nChoose X and Y at random inside the square",
              "comment2": ""
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "SamplePoint",
                    "SquareTarget.CenterX() + SquareTarget.Width() / 2 * RandomFloatInRange(-1, 1)",
                    "SquareTarget.CenterY() + SquareTarget.Height() / 2 * RandomFloatInRange(-1, 1)",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Circle, the simplest way: choose angle and distance from centre at random\nThis generates a lot of points near the centre, and few at the edges. This can be what you want or not.",
              "comment2": ""
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Note: Here I explicitly compute the point's position with sine and cosine, but if you already have a single object picked, you can use the \"Put object around\" action. (See the annulus sampling scene for an example.)",
              "comment2": ""
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "NaiveCircleTarget",
                    "LatestRandomDistance",
                    "=",
                    "RandomFloat(NaiveCircleTarget.Width() / 2)"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "NaiveCircleTarget",
                    "LatestRandomAngle",
                    "=",
                    "RandomFloat(6.2831853)"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "SamplePoint",
                    "NaiveCircleTarget.CenterX() + NaiveCircleTarget.Variable(LatestRandomDistance) * cos(NaiveCircleTarget.Variable(LatestRandomAngle))",
                    "NaiveCircleTarget.CenterY() + NaiveCircleTarget.Variable(LatestRandomDistance) * sin(NaiveCircleTarget.Variable(LatestRandomAngle))",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Circle, choosing points uniformly all over the circle\nThe angle is still chosen uniformly between 0 and 2π, but the radius is scaled so that longer distances are more likely to be chosen.",
              "comment2": ""
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "UniformPowerCircleTarget",
                    "LatestRandomDistance",
                    "=",
                    "NaiveCircleTarget.Width() / 2 * sqrt(RandomFloat(1))"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "UniformPowerCircleTarget",
                    "LatestRandomAngle",
                    "=",
                    "RandomFloat(6.2831853)"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "SamplePoint",
                    "UniformPowerCircleTarget.CenterX() + UniformPowerCircleTarget.Variable(LatestRandomDistance) * cos(UniformPowerCircleTarget.Variable(LatestRandomAngle))",
                    "UniformPowerCircleTarget.CenterY() + UniformPowerCircleTarget.Variable(LatestRandomDistance) * sin(UniformPowerCircleTarget.Variable(LatestRandomAngle))",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Another way to choose points uniformly over the circle\nGenerate points in a square, and discard those that fall outside the circle",
              "comment2": ""
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "UniformRejectionCircleTarget",
                    "LatestX",
                    "=",
                    "UniformRejectionCircleTarget.Width() / 2 * RandomFloatInRange(-1, 1)"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "UniformRejectionCircleTarget",
                    "LatestY",
                    "=",
                    "UniformRejectionCircleTarget.Height() / 2 * RandomFloatInRange(-1, 1)"
                  ],
                  "subInstructions": []
                }
              ],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Egal"
                      },
                      "parameters": [
                        "UniformRejectionCircleTarget.Variable(LatestX)*UniformRejectionCircleTarget.Variable(LatestX) + UniformRejectionCircleTarget.Variable(LatestY)*UniformRejectionCircleTarget.Variable(LatestY)",
                        "<=",
                        "UniformRejectionCircleTarget.Width() * UniformRejectionCircleTarget.Width() / 4"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "SamplePoint",
                        "UniformRejectionCircleTarget.CenterX() + UniformRejectionCircleTarget.Variable(LatestX)",
                        "UniformRejectionCircleTarget.CenterY() + UniformRejectionCircleTarget.Variable(LatestY)",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ]
        }
      ],
      "layers": [
        {
          "ambientLightColorB": 36,
          "ambientLightColorG": 7028296,
          "ambientLightColorR": 32,
          "followBaseLayerCamera": false,
          "isLightingLayer": false,
          "name": "",
          "visibility": true,
          "cameras": [
            {
              "defaultSize": true,
              "defaultViewport": true,
              "height": 0,
              "viewportBottom": 1,
              "viewportLeft": 0,
              "viewportRight": 1,
              "viewportTop": 0,
              "width": 0
            }
          ],
          "effects": []
        }
      ],
      "behaviorsSharedData": []
    },
    {
      "b": 209,
      "disableInputWhenNotFocused": true,
      "mangledName": "Annulus_32sampling",
      "name": "Annulus sampling",
      "oglFOV": 90,
      "oglZFar": 500,
      "oglZNear": 1,
      "r": 209,
      "standardSortMethod": true,
      "stopSoundsOnStartup": true,
      "title": "",
      "v": 209,
      "uiSettings": {
        "grid": false,
        "gridB": 255,
        "gridG": 180,
        "gridHeight": 32,
        "gridOffsetX": 0,
        "gridOffsetY": 0,
        "gridR": 158,
        "gridType": "rectangular",
        "gridWidth": 32,
        "snap": true,
        "windowMask": false,
        "zoomFactor": 1
      },
      "objectsGroups": [],
      "variables": [],
      "instances": [
        {
          "angle": 0,
          "customSize": true,
          "height": 100,
          "layer": "",
          "locked": false,
          "name": "Emitter",
          "persistentUuid": "6fca3af6-649f-4ef7-a667-787a195cc1d5",
          "width": 100,
          "x": 161,
          "y": 86,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 100,
          "layer": "",
          "locked": false,
          "name": "Emitter",
          "persistentUuid": "e98c1c59-f87b-4990-bf43-43bc6076fbb1",
          "width": 100,
          "x": 521,
          "y": 168,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "NbSamples",
              "type": "number",
              "value": 1000
            },
            {
              "name": "MinRadius",
              "type": "string",
              "value": "50"
            },
            {
              "name": "MaxRadius",
              "type": "string",
              "value": "200"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 80,
          "layer": "",
          "locked": false,
          "name": "Emitter",
          "persistentUuid": "18df6c7c-c336-44b2-a76d-60ef98baedfc",
          "width": 80,
          "x": 466,
          "y": 445,
          "zOrder": 2,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "MinRadius",
              "type": "string",
              "value": "15"
            },
            {
              "name": "MaxRadius",
              "type": "string",
              "value": "40"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 200,
          "layer": "",
          "locked": false,
          "name": "Emitter",
          "persistentUuid": "004c3563-f546-45c2-ac3b-05f35b2d8904",
          "width": 200,
          "x": 95,
          "y": 289,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        }
      ],
      "objects": [
        {
          "name": "Emitter",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [
            {
              "name": "NbSamples",
              "type": "number",
              "value": 100
            },
            {
              "name": "MinRadius",
              "type": "string",
              "value": "50"
            },
            {
              "name": "MaxRadius",
              "type": "string",
              "value": "100"
            },
            {
              "name": "RelativeRadiusFloor",
              "type": "number",
              "value": 0
            },
            {
              "name": "LatestRandomDistance",
              "type": "number",
              "value": 0
            },
            {
              "name": "LatestRandomAngle",
              "type": "number",
              "value": 0
            }
          ],
          "behaviors": [],
          "animations": [
            {
              "name": "",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "CircleTarget-1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Generating points near an object, but not too close to it\nExample: generate enemies near the player",
          "comment2": ""
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "The points must be:\n- at more than a minimum distance from the centre\n- at less than a maximum distance\n- all possible points are equally likely to be chosen",
          "comment2": ""
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "DepartScene"
              },
              "parameters": [
                ""
              ],
              "subInstructions": []
            }
          ],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::ForEach",
              "object": "Emitter",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "This floor excludes points closer than the minimum distance. We use it to generate every point, so compute it once and save it in a variable.",
                  "comment2": ""
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Emitter",
                        "RelativeRadiusFloor",
                        "=",
                        "pow(Emitter.Variable(MinRadius) / Emitter.Variable(MaxRadius), 2)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "To generate a point:\n- choose a distance from the centre, scaled so that longer distances are more likely. (See the circle sampling scene for why this is needed.)\n- choose the angle at random",
                  "comment2": ""
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Repeat",
                  "repeatExpression": "Emitter.Variable(NbSamples)",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Emitter",
                        "LatestRandomDistance",
                        "=",
                        "Emitter.Variable(MaxRadius) * sqrt(RandomFloatInRange(Emitter.Variable(RelativeRadiusFloor), 1))"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Emitter",
                        "LatestRandomAngle",
                        "=",
                        "RandomFloat(360)"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "SamplePoint",
                        "Emitter.CenterX()",
                        "Emitter.CenterY()",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "MettreAutour"
                      },
                      "parameters": [
                        "SamplePoint",
                        "Emitter",
                        "Emitter.Variable(LatestRandomDistance)",
                        "Emitter.Variable(LatestRandomAngle)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ]
        }
      ],
      "layers": [
        {
          "ambientLightColorB": 52,
          "ambientLightColorG": 7472320,
          "ambientLightColorR": 83,
          "followBaseLayerCamera": false,
          "isLightingLayer": false,
          "name": "",
          "visibility": true,
          "cameras": [
            {
              "defaultSize": true,
              "defaultViewport": true,
              "height": 0,
              "viewportBottom": 1,
              "viewportLeft": 0,
              "viewportRight": 1,
              "viewportTop": 0,
              "width": 0
            }
          ],
          "effects": []
        }
      ],
      "behaviorsSharedData": []
    }
  ],
  "externalEvents": [],
  "eventsFunctionsExtensions": [],
  "externalLayouts": [],
  "externalSourceFiles": []
}