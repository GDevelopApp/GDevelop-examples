{
  "firstLayout": "",
  "gdVersion": {
    "build": 213,
    "major": 5,
    "minor": 4,
    "revision": 0
  },
  "properties": {
    "adaptGameResolutionAtRuntime": false,
    "antialiasingMode": "MSAA",
    "antialisingEnabledOnMobile": false,
    "folderProject": false,
    "orientation": "default",
    "packageName": "com.example.shapepainter",
    "pixelsRounding": false,
    "projectUuid": "49af45a6-8dc7-4f4e-bce8-5fe696257fd1",
    "scaleMode": "linear",
    "sizeOnStartupMode": "",
    "templateSlug": "",
    "useExternalSourceFiles": false,
    "version": "1.0.0",
    "name": "Advanced Shape Painter",
    "description": "",
    "author": "",
    "windowWidth": 800,
    "windowHeight": 600,
    "latestCompilationDirectory": "",
    "maxFPS": 60,
    "minFPS": 10,
    "verticalSync": false,
    "platformSpecificAssets": {},
    "loadingScreen": {
      "backgroundColor": 0,
      "backgroundFadeInDuration": 0.2,
      "backgroundImageResourceName": "",
      "gdevelopLogoStyle": "light",
      "logoAndProgressFadeInDuration": 0.2,
      "logoAndProgressLogoFadeInDelay": 0.2,
      "minDuration": 1.5,
      "progressBarColor": 16777215,
      "progressBarHeight": 20,
      "progressBarMaxWidth": 200,
      "progressBarMinWidth": 40,
      "progressBarWidthPercent": 30,
      "showGDevelopSplash": true,
      "showProgressBar": true
    },
    "watermark": {
      "placement": "bottom-left",
      "showWatermark": true
    },
    "authorIds": [
      "t0AOR3JaOlak1TykejmNhjR5UQb2"
    ],
    "authorUsernames": [],
    "categories": [],
    "playableDevices": [],
    "extensionProperties": [],
    "platforms": [
      {
        "name": "GDevelop JS platform"
      }
    ],
    "currentPlatform": "GDevelop JS platform"
  },
  "resources": {
    "resources": [
      {
        "alwaysLoaded": false,
        "file": "ShapeCircle.png",
        "kind": "image",
        "metadata": "",
        "name": "ShapeCircle.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "ShapeCircleBorder.png",
        "kind": "image",
        "metadata": "",
        "name": "ShapeCircleBorder.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "ShapeRect.png",
        "kind": "image",
        "metadata": "",
        "name": "ShapeRect.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "ShapeRectBorder.png",
        "kind": "image",
        "metadata": "",
        "name": "ShapeRectBorder.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "ShapeLine.png",
        "kind": "image",
        "metadata": "",
        "name": "ShapeLine.png",
        "smoothed": true,
        "userAdded": true
      },
      {
        "alwaysLoaded": false,
        "file": "BarSelector.png",
        "kind": "image",
        "metadata": "",
        "name": "BarSelector.png",
        "smoothed": true,
        "userAdded": true
      }
    ],
    "resourceFolders": []
  },
  "objects": [],
  "objectsFolderStructure": {
    "folderName": "__ROOT"
  },
  "objectsGroups": [],
  "variables": [],
  "layouts": [
    {
      "b": 209,
      "disableInputWhenNotFocused": true,
      "mangledName": "Scene",
      "name": "Scene",
      "r": 209,
      "standardSortMethod": true,
      "stopSoundsOnStartup": true,
      "title": "",
      "v": 209,
      "uiSettings": {
        "grid": false,
        "gridType": "rectangular",
        "gridWidth": 32,
        "gridHeight": 32,
        "gridOffsetX": 0,
        "gridOffsetY": 0,
        "gridColor": 10401023,
        "gridAlpha": 0.8,
        "snap": true,
        "zoomFactor": 1,
        "windowMask": false
      },
      "objectsGroups": [],
      "variables": [
        {
          "name": "Shapes",
          "type": "structure",
          "children": [
            {
              "name": "0",
              "type": "structure",
              "children": [
                {
                  "name": "Border",
                  "type": "string",
                  "value": "0"
                },
                {
                  "name": "BorderColor",
                  "type": "structure",
                  "children": [
                    {
                      "name": "B",
                      "type": "string",
                      "value": "0"
                    },
                    {
                      "name": "G",
                      "type": "string",
                      "value": "0"
                    },
                    {
                      "name": "R",
                      "type": "string",
                      "value": "0"
                    }
                  ]
                },
                {
                  "name": "BorderOpacity",
                  "type": "string",
                  "value": "0"
                },
                {
                  "name": "EndX",
                  "type": "string",
                  "value": "0"
                },
                {
                  "name": "EndY",
                  "type": "string",
                  "value": "0"
                },
                {
                  "name": "FillColor",
                  "type": "structure",
                  "children": [
                    {
                      "name": "B",
                      "type": "string",
                      "value": "0"
                    },
                    {
                      "name": "G",
                      "type": "string",
                      "value": "0"
                    },
                    {
                      "name": "R",
                      "type": "string",
                      "value": "0"
                    }
                  ]
                },
                {
                  "name": "FillOpacity",
                  "type": "string",
                  "value": "0"
                },
                {
                  "name": "Radius",
                  "type": "string",
                  "value": "0"
                },
                {
                  "name": "StartX",
                  "type": "string",
                  "value": "0"
                },
                {
                  "name": "StartY",
                  "type": "string",
                  "value": "0"
                },
                {
                  "name": "Thickness",
                  "type": "string",
                  "value": "0"
                },
                {
                  "name": "Type",
                  "type": "string",
                  "value": "0"
                }
              ]
            },
            {
              "name": "Size",
              "type": "string",
              "value": "-1"
            }
          ]
        },
        {
          "name": "i",
          "type": "string",
          "value": "0"
        },
        {
          "name": "else",
          "type": "string",
          "value": "0"
        },
        {
          "name": "shape",
          "type": "string",
          "value": "0"
        },
        {
          "name": "isDrawing",
          "type": "boolean",
          "value": false
        },
        {
          "name": "R",
          "type": "string",
          "value": "0"
        },
        {
          "name": "G",
          "type": "string",
          "value": "0"
        },
        {
          "name": "B",
          "type": "string",
          "value": "0"
        },
        {
          "name": "A",
          "type": "string",
          "value": "100"
        },
        {
          "folded": true,
          "name": "canDraw",
          "type": "boolean",
          "value": false
        }
      ],
      "instances": [
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "name": "Drawer",
          "persistentUuid": "1fb23849-d60e-4e8f-96e1-7e2e20d988c0",
          "width": 0,
          "x": 283,
          "y": 96,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID",
              "type": "string",
              "value": "-1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "name": "BarSelect",
          "persistentUuid": "c3144d13-d5d7-41dd-908a-3b1eecd1bd14",
          "width": 0,
          "x": 150,
          "y": 495,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID",
              "type": "string",
              "value": "3"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "name": "BarSelect",
          "persistentUuid": "0bf1ca5d-2b6d-4d00-8128-29338d3a89fa",
          "width": 0,
          "x": 50,
          "y": 405,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID",
              "type": "string",
              "value": "0"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "name": "BarSelect",
          "persistentUuid": "6389becb-a502-4967-baa5-68b9d0c353ba",
          "width": 0,
          "x": 50,
          "y": 435,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID",
              "type": "string",
              "value": "1"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "name": "BarSelect",
          "persistentUuid": "82ad3623-fdf2-4962-9e2d-604484a3ea35",
          "width": 0,
          "x": 50,
          "y": 465,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID",
              "type": "string",
              "value": "2"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "name": "message",
          "persistentUuid": "a0ad8fec-cdc3-4398-af1a-02a5282931e0",
          "width": 0,
          "x": 18,
          "y": 523,
          "zOrder": 2,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        }
      ],
      "objects": [
        {
          "assetStoreId": "",
          "name": "Drawer",
          "type": "PrimitiveDrawing::Drawer",
          "variables": [
            {
              "name": "StartX",
              "type": "string",
              "value": "0"
            },
            {
              "name": "StartY",
              "type": "string",
              "value": "0"
            },
            {
              "name": "EndX",
              "type": "string",
              "value": "0"
            },
            {
              "name": "EndY",
              "type": "string",
              "value": "0"
            },
            {
              "name": "ID",
              "type": "string",
              "value": "0"
            }
          ],
          "effects": [],
          "behaviors": [],
          "fillOpacity": 100,
          "outlineSize": 1,
          "outlineOpacity": 200,
          "fillColor": {
            "b": 128,
            "g": 255,
            "r": 128
          },
          "outlineColor": {
            "b": 0,
            "g": 232,
            "r": 0
          },
          "absoluteCoordinates": true,
          "clearBetweenFrames": true,
          "antialiasing": "none"
        },
        {
          "adaptCollisionMaskAutomatically": false,
          "assetStoreId": "",
          "name": "Shapes",
          "type": "Sprite",
          "updateIfNotVisible": true,
          "variables": [],
          "effects": [],
          "behaviors": [],
          "animations": [
            {
              "name": "",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 1,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "ShapeCircle.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 15,
                        "y": 10
                      },
                      "customCollisionMask": [
                        [
                          {
                            "x": 0,
                            "y": 0
                          },
                          {
                            "x": 30,
                            "y": 0
                          },
                          {
                            "x": 30,
                            "y": 20
                          },
                          {
                            "x": 0,
                            "y": 20
                          }
                        ]
                      ]
                    },
                    {
                      "hasCustomCollisionMask": false,
                      "image": "ShapeCircleBorder.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 15,
                        "y": 10
                      },
                      "customCollisionMask": [
                        [
                          {
                            "x": 0,
                            "y": 0
                          },
                          {
                            "x": 30,
                            "y": 0
                          },
                          {
                            "x": 30,
                            "y": 20
                          },
                          {
                            "x": 0,
                            "y": 20
                          }
                        ]
                      ]
                    },
                    {
                      "hasCustomCollisionMask": false,
                      "image": "ShapeRect.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 15,
                        "y": 10
                      },
                      "customCollisionMask": [
                        [
                          {
                            "x": 0,
                            "y": 0
                          },
                          {
                            "x": 30,
                            "y": 0
                          },
                          {
                            "x": 30,
                            "y": 20
                          },
                          {
                            "x": 0,
                            "y": 20
                          }
                        ]
                      ]
                    },
                    {
                      "hasCustomCollisionMask": false,
                      "image": "ShapeRectBorder.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 15,
                        "y": 10
                      },
                      "customCollisionMask": [
                        [
                          {
                            "x": 0,
                            "y": 0
                          },
                          {
                            "x": 30,
                            "y": 0
                          },
                          {
                            "x": 30,
                            "y": 20
                          },
                          {
                            "x": 0,
                            "y": 20
                          }
                        ]
                      ]
                    },
                    {
                      "hasCustomCollisionMask": false,
                      "image": "ShapeLine.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 15,
                        "y": 10
                      },
                      "customCollisionMask": [
                        [
                          {
                            "x": 0,
                            "y": 0
                          },
                          {
                            "x": 30,
                            "y": 0
                          },
                          {
                            "x": 30,
                            "y": 20
                          },
                          {
                            "x": 0,
                            "y": 20
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "adaptCollisionMaskAutomatically": false,
          "assetStoreId": "",
          "name": "BarSelect",
          "type": "Sprite",
          "updateIfNotVisible": true,
          "variables": [
            {
              "name": "isDragged",
              "type": "boolean",
              "value": false
            },
            {
              "name": "Value",
              "type": "string",
              "value": "0"
            }
          ],
          "effects": [],
          "behaviors": [],
          "animations": [
            {
              "name": "",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 1,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "BarSelector.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 9,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 10,
                        "y": 10
                      },
                      "customCollisionMask": [
                        [
                          {
                            "x": 0,
                            "y": 0
                          },
                          {
                            "x": 20,
                            "y": 0
                          },
                          {
                            "x": 20,
                            "y": 20
                          },
                          {
                            "x": 0,
                            "y": 20
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "assetStoreId": "",
          "bold": false,
          "italic": false,
          "name": "message",
          "smoothed": true,
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "effects": [],
          "behaviors": [],
          "string": "Click the Shape buttons on the left to select a shape\nDrag the bars below to change color and opacity\nClick the empty area to start drawing the selected shape",
          "font": "",
          "textAlignment": "",
          "characterSize": 20,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          },
          "content": {
            "bold": false,
            "isOutlineEnabled": false,
            "isShadowEnabled": false,
            "italic": false,
            "outlineColor": "255;255;255",
            "outlineThickness": 2,
            "shadowAngle": 90,
            "shadowBlurRadius": 2,
            "shadowColor": "0;0;0",
            "shadowDistance": 4,
            "shadowOpacity": 127,
            "smoothed": true,
            "underlined": false,
            "text": "Click the Shape buttons on the left to select a shape\nDrag the bars below to change color and opacity\nClick the empty area to start drawing the selected shape",
            "font": "",
            "textAlignment": "",
            "characterSize": 20,
            "color": "0;0;0"
          }
        }
      ],
      "objectsFolderStructure": {
        "folderName": "__ROOT",
        "children": [
          {
            "objectName": "Drawer"
          },
          {
            "objectName": "Shapes"
          },
          {
            "objectName": "BarSelect"
          },
          {
            "objectName": "message"
          }
        ]
      },
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "This example is using the shape painter object to draw shapes\nAt the beginning we are creating the graphical user interface using the Shapes object which is used to select what shape to draw\nWe also use the shape drawer object to draw the lines on the screen that we can use to drag the BarSelect objects to select the color and opacitiy of the shape"
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Initialize",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Create the 5 shape selector objects\nThe variable i is used to dynamically increase the position of the shape object instance on the Y axis :: 50;150+Variable(i)\nThe variable also used to display the correct animation for the object :: Change the animation frame of Shape to Variable(i)\nLater this value is also used to identify which shape was clicked as each shape is the animation of the same Shape object so we are using i as the ID value to identify them."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarScene"
                  },
                  "parameters": [
                    "i",
                    "=",
                    "0"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Repeat",
                  "repeatExpression": "5",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "Shapes",
                        "50",
                        "150+Variable(i)*40",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangeSprite"
                      },
                      "parameters": [
                        "Shapes",
                        "=",
                        "Variable(i)"
                      ]
                    },
                    {
                      "type": {
                        "value": "PauseAnimation"
                      },
                      "parameters": [
                        "Shapes"
                      ]
                    },
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "i",
                        "+",
                        "1"
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Update",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Draw the color selection lines"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "PrimitiveDrawing::FillColor"
                  },
                  "parameters": [
                    "Drawer",
                    "\"0;0;0\""
                  ]
                },
                {
                  "type": {
                    "value": "PrimitiveDrawing::FillOpacity"
                  },
                  "parameters": [
                    "Drawer",
                    "=",
                    "255"
                  ]
                },
                {
                  "type": {
                    "value": "PrimitiveDrawing::OutlineSize"
                  },
                  "parameters": [
                    "Drawer",
                    "=",
                    "0"
                  ]
                },
                {
                  "type": {
                    "value": "PrimitiveDrawing::Rectangle"
                  },
                  "parameters": [
                    "Drawer",
                    "50",
                    "400",
                    "305",
                    "405"
                  ]
                },
                {
                  "type": {
                    "value": "PrimitiveDrawing::Rectangle"
                  },
                  "parameters": [
                    "Drawer",
                    "50",
                    "430",
                    "305",
                    "435"
                  ]
                },
                {
                  "type": {
                    "value": "PrimitiveDrawing::Rectangle"
                  },
                  "parameters": [
                    "Drawer",
                    "50",
                    "460",
                    "305",
                    "465"
                  ]
                },
                {
                  "type": {
                    "value": "PrimitiveDrawing::Rectangle"
                  },
                  "parameters": [
                    "Drawer",
                    "50",
                    "490",
                    "305",
                    "495"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "PrimitiveDrawing::FillColor"
                      },
                      "parameters": [
                        "Drawer",
                        "VariableString(R)+\";\"+VariableString(G)+\";\"+VariableString(B)"
                      ]
                    },
                    {
                      "type": {
                        "value": "PrimitiveDrawing::FillOpacity"
                      },
                      "parameters": [
                        "Drawer",
                        "=",
                        "Variable(A)"
                      ]
                    },
                    {
                      "type": {
                        "value": "PrimitiveDrawing::Rectangle"
                      },
                      "parameters": [
                        "Drawer",
                        "310",
                        "400",
                        "405",
                        "495"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Draw shapes"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "SourisBouton"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "If the mouse is first-time pressed, set canDraw to true as an indication we can start drawing"
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Once"
                      },
                      "parameters": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SetBooleanVariable"
                      },
                      "parameters": [
                        "canDraw",
                        "True",
                        ""
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "While the pointer is down, if the pointer is over a shape, get the sprite of the object and store it number in the shape variable which is used then to pick which shape to draw\nWe also set canDraw to false to indicate we don't want to draw just yet"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "Shapes",
                            "",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetBooleanVariable"
                          },
                          "parameters": [
                            "canDraw",
                            "False",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "shape",
                            "=",
                            "Shapes.Sprite()"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "In case the pointer is over the BarSelect object that means we want to drag the object to change the color of the shape, we set isDragged value of the objec to true to indicate that we are about to drag this object\nWe also set the value of canDraw to false to indicate we don't want to draw just yet"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "SourisSurObjet"
                          },
                          "parameters": [
                            "BarSelect",
                            "",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetBooleanVariable"
                          },
                          "parameters": [
                            "canDraw",
                            "False",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "SetBooleanObjectVariable"
                          },
                          "parameters": [
                            "BarSelect",
                            "isDragged",
                            "True",
                            ""
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "In case the value of canDraw is true that means the pointer is NOT over the gui element so we can start drawing the selected shape as we move the mouse\nIn order to draw a shape, the drawer object going to need some initial values such as start position of drawing, shape, shape size"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "BooleanVariable"
                          },
                          "parameters": [
                            "canDraw",
                            "True",
                            ""
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "SetBooleanVariable"
                          },
                          "parameters": [
                            "isDrawing",
                            "True",
                            ""
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "Shapes.Size",
                            "+",
                            "1"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(Shapes.Size)].Type",
                            "=",
                            "Variable(shape)"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(Shapes.Size)].StartX",
                            "=",
                            "MouseX(\"\",0)"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(Shapes.Size)].StartY",
                            "=",
                            "MouseY(\"\",0)"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Comment",
                          "color": {
                            "b": 109,
                            "g": 230,
                            "r": 255,
                            "textB": 0,
                            "textG": 0,
                            "textR": 0
                          },
                          "comment": "The shape painter object has properties that we also need to set such as RGB color values, opacity and border. We set these values here and store them in variables for each different shape we can draw"
                        },
                        {
                          "type": "BuiltinCommonInstructions::Comment",
                          "color": {
                            "b": 109,
                            "g": 230,
                            "r": 255,
                            "textB": 0,
                            "textG": 0,
                            "textR": 0
                          },
                          "comment": "Circle Filled"
                        },
                        {
                          "type": "BuiltinCommonInstructions::Comment",
                          "color": {
                            "b": 109,
                            "g": 230,
                            "r": 255,
                            "textB": 0,
                            "textG": 0,
                            "textR": 0
                          },
                          "comment": "Rectangle Filled"
                        },
                        {
                          "type": "BuiltinCommonInstructions::Comment",
                          "color": {
                            "b": 109,
                            "g": 230,
                            "r": 255,
                            "textB": 0,
                            "textG": 0,
                            "textR": 0
                          },
                          "comment": "Line"
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "BuiltinCommonInstructions::Or"
                              },
                              "parameters": [],
                              "subInstructions": [
                                {
                                  "type": {
                                    "value": "VarScene"
                                  },
                                  "parameters": [
                                    "shape",
                                    "=",
                                    "0"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "VarScene"
                                  },
                                  "parameters": [
                                    "shape",
                                    "=",
                                    "2"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "VarScene"
                                  },
                                  "parameters": [
                                    "shape",
                                    "=",
                                    "4"
                                  ]
                                }
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].FillColor.R",
                                "=",
                                "Variable(R)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].FillColor.G",
                                "=",
                                "Variable(G)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].FillColor.B",
                                "=",
                                "Variable(B)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].FillOpacity",
                                "=",
                                "Variable(A)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].BorderOpacity",
                                "=",
                                "0"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].Thickness",
                                "=",
                                "2"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Comment",
                          "color": {
                            "b": 109,
                            "g": 230,
                            "r": 255,
                            "textB": 0,
                            "textG": 0,
                            "textR": 0
                          },
                          "comment": "Circle Border"
                        },
                        {
                          "type": "BuiltinCommonInstructions::Comment",
                          "color": {
                            "b": 109,
                            "g": 230,
                            "r": 255,
                            "textB": 0,
                            "textG": 0,
                            "textR": 0
                          },
                          "comment": "Rectangle Border"
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "BuiltinCommonInstructions::Or"
                              },
                              "parameters": [],
                              "subInstructions": [
                                {
                                  "type": {
                                    "value": "VarScene"
                                  },
                                  "parameters": [
                                    "shape",
                                    "=",
                                    "1"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "VarScene"
                                  },
                                  "parameters": [
                                    "shape",
                                    "=",
                                    "3"
                                  ]
                                }
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].FillOpacity",
                                "=",
                                "0"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].BorderColor.R",
                                "=",
                                "Variable(R)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].BorderColor.G",
                                "=",
                                "Variable(G)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].BorderColor.B",
                                "=",
                                "Variable(B)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].BorderOpacity",
                                "=",
                                "Variable(A)"
                              ]
                            },
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "Shapes[VariableString(Shapes.Size)].Border",
                                "=",
                                "2"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "If the pointer is down and the bar is selected BarSelect isDragged = true, move the bar"
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BooleanObjectVariable"
                      },
                      "parameters": [
                        "BarSelect",
                        "isDragged",
                        "True",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "MettreX"
                      },
                      "parameters": [
                        "BarSelect",
                        "=",
                        "MouseX(\"\",0)"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "PosX"
                          },
                          "parameters": [
                            "BarSelect",
                            "<",
                            "50"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "MettreX"
                          },
                          "parameters": [
                            "BarSelect",
                            "=",
                            "50"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "PosX"
                          },
                          "parameters": [
                            "BarSelect",
                            ">",
                            "305"
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "MettreX"
                          },
                          "parameters": [
                            "BarSelect",
                            "=",
                            "305"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "BarSelect",
                            "Value",
                            "=",
                            "BarSelect.X()-50"
                          ]
                        }
                      ],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "VarObjet"
                              },
                              "parameters": [
                                "BarSelect",
                                "ID",
                                "=",
                                "0"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "R",
                                "=",
                                "BarSelect.Variable(Value)"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "VarObjet"
                              },
                              "parameters": [
                                "BarSelect",
                                "ID",
                                "=",
                                "1"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "G",
                                "=",
                                "BarSelect.Variable(Value)"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "VarObjet"
                              },
                              "parameters": [
                                "BarSelect",
                                "ID",
                                "=",
                                "2"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "B",
                                "=",
                                "BarSelect.Variable(Value)"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "VarObjet"
                              },
                              "parameters": [
                                "BarSelect",
                                "ID",
                                "=",
                                "3"
                              ]
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "ModVarScene"
                              },
                              "parameters": [
                                "A",
                                "=",
                                "BarSelect.Variable(Value)"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "If the pointer is down and the value of isDrawing = true then we can start drawing"
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BooleanVariable"
                      },
                      "parameters": [
                        "isDrawing",
                        "True",
                        ""
                      ]
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Before we can start drawing, we need to initialize some more values\nIn case of circle we need to set the radius"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Circle Filled"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Circle Border"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Or"
                          },
                          "parameters": [],
                          "subInstructions": [
                            {
                              "type": {
                                "value": "VarScene"
                              },
                              "parameters": [
                                "shape",
                                "=",
                                "0"
                              ]
                            },
                            {
                              "type": {
                                "value": "VarScene"
                              },
                              "parameters": [
                                "shape",
                                "=",
                                "1"
                              ]
                            }
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(Shapes.Size)].Radius",
                            "=",
                            "sqrt( pow(MouseX(\"\",0)-Variable(Shapes[VariableString(Shapes.Size)].StartX), 2) + pow(MouseY(\"\",0)-Variable(Shapes[VariableString(Shapes.Size)].StartY), 2) )"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "In case of rectangle and line we need to set the end point of the shape"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Rectangle Filled"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Rectangle Border"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Line"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "BuiltinCommonInstructions::Or"
                          },
                          "parameters": [],
                          "subInstructions": [
                            {
                              "type": {
                                "value": "VarScene"
                              },
                              "parameters": [
                                "shape",
                                "=",
                                "2"
                              ]
                            },
                            {
                              "type": {
                                "value": "VarScene"
                              },
                              "parameters": [
                                "shape",
                                "=",
                                "3"
                              ]
                            },
                            {
                              "type": {
                                "value": "VarScene"
                              },
                              "parameters": [
                                "shape",
                                "=",
                                "4"
                              ]
                            }
                          ]
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(Shapes.Size)].EndX",
                            "=",
                            "MouseX(\"\",0)"
                          ]
                        },
                        {
                          "type": {
                            "value": "ModVarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(Shapes.Size)].EndY",
                            "=",
                            "MouseY(\"\",0)"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "If the pointer is no longer down, stop drawing"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "SourisBouton"
                  },
                  "parameters": [
                    "",
                    "Left"
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetBooleanVariable"
                  },
                  "parameters": [
                    "isDrawing",
                    "False",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "SetBooleanObjectVariable"
                  },
                  "parameters": [
                    "BarSelect",
                    "isDragged",
                    "False",
                    ""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Reset the counter used to pick shape number"
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "ModVarScene"
                  },
                  "parameters": [
                    "i",
                    "=",
                    "0"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Repeat = the size of the rectangle struct (+1 because I like the struct start with 0)\n-draw the rectangle in the struct with index = i\n-add 1 to i\nWe apply all the properties now on the drawer object based on what shape we picked to draw, what color and opacity"
            },
            {
              "type": "BuiltinCommonInstructions::Repeat",
              "repeatExpression": "Variable(Shapes.Size)+1",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "PrimitiveDrawing::FillColor"
                  },
                  "parameters": [
                    "Drawer",
                    "VariableString(Shapes[VariableString(i)].FillColor.R)+\";\"+VariableString(Shapes[VariableString(i)].FillColor.G)+\";\"+VariableString(Shapes[VariableString(i)].FillColor.B)"
                  ]
                },
                {
                  "type": {
                    "value": "PrimitiveDrawing::FillOpacity"
                  },
                  "parameters": [
                    "Drawer",
                    "=",
                    "Variable(Shapes[VariableString(i)].FillOpacity)"
                  ]
                },
                {
                  "type": {
                    "value": "PrimitiveDrawing::OutlineColor"
                  },
                  "parameters": [
                    "Drawer",
                    "VariableString(Shapes[VariableString(i)].BorderColor.R)+\";\"+VariableString(Shapes[VariableString(i)].BorderColor.G)+\";\"+VariableString(Shapes[VariableString(i)].BorderColor.B)"
                  ]
                },
                {
                  "type": {
                    "value": "PrimitiveDrawing::OutlineOpacity"
                  },
                  "parameters": [
                    "Drawer",
                    "=",
                    "Variable(Shapes[VariableString(i)].BorderOpacity)"
                  ]
                },
                {
                  "type": {
                    "value": "PrimitiveDrawing::OutlineSize"
                  },
                  "parameters": [
                    "Drawer",
                    "=",
                    "Variable(Shapes[VariableString(i)].Border)"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Draw the circle if the circle is picked shape 0 and 1"
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Or"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "VarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(i)].Type",
                            "=",
                            "0"
                          ]
                        },
                        {
                          "type": {
                            "value": "VarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(i)].Type",
                            "=",
                            "1"
                          ]
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "PrimitiveDrawing::Circle"
                      },
                      "parameters": [
                        "Drawer",
                        "Variable(Shapes[VariableString(i)].StartX)",
                        "Variable(Shapes[VariableString(i)].StartY)",
                        "Variable(Shapes[VariableString(i)].Radius)"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Draw the rectangle if the rectangle is picked shape: 2 and 3"
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Or"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "VarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(i)].Type",
                            "=",
                            "2"
                          ]
                        },
                        {
                          "type": {
                            "value": "VarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(i)].Type",
                            "=",
                            "3"
                          ]
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "PrimitiveDrawing::Rectangle"
                      },
                      "parameters": [
                        "Drawer",
                        "Variable(Shapes[VariableString(i)].StartX)",
                        "Variable(Shapes[VariableString(i)].StartY)",
                        "Variable(Shapes[VariableString(i)].EndX)",
                        "Variable(Shapes[VariableString(i)].EndY)"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Draw the line if the line is picked shape: 4"
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Or"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "value": "VarScene"
                          },
                          "parameters": [
                            "Shapes[VariableString(i)].Type",
                            "=",
                            "4"
                          ]
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "PrimitiveDrawing::Line"
                      },
                      "parameters": [
                        "Drawer",
                        "Variable(Shapes[VariableString(i)].StartX)",
                        "Variable(Shapes[VariableString(i)].StartY)",
                        "Variable(Shapes[VariableString(i)].EndX)",
                        "Variable(Shapes[VariableString(i)].EndY)",
                        "Variable(Shapes[VariableString(i)].Thickness)"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "i",
                        "+",
                        "1"
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": []
        }
      ],
      "layers": [
        {
          "ambientLightColorB": 200,
          "ambientLightColorG": 200,
          "ambientLightColorR": 200,
          "camera3DFarPlaneDistance": 10000,
          "camera3DFieldOfView": 45,
          "camera3DNearPlaneDistance": 0.1,
          "cameraType": "perspective",
          "followBaseLayerCamera": false,
          "isLightingLayer": false,
          "isLocked": false,
          "name": "",
          "renderingType": "",
          "visibility": true,
          "cameras": [
            {
              "defaultSize": true,
              "defaultViewport": true,
              "height": 0,
              "viewportBottom": 1,
              "viewportLeft": 0,
              "viewportRight": 1,
              "viewportTop": 0,
              "width": 0
            }
          ],
          "effects": []
        }
      ],
      "behaviorsSharedData": [
        {
          "name": "Animation",
          "type": "AnimatableCapability::AnimatableBehavior"
        },
        {
          "name": "Effect",
          "type": "EffectCapability::EffectBehavior"
        },
        {
          "name": "Flippable",
          "type": "FlippableCapability::FlippableBehavior"
        },
        {
          "name": "Opacity",
          "type": "OpacityCapability::OpacityBehavior"
        },
        {
          "name": "Resizable",
          "type": "ResizableCapability::ResizableBehavior"
        },
        {
          "name": "Scale",
          "type": "ScalableCapability::ScalableBehavior"
        },
        {
          "name": "Text",
          "type": "TextContainerCapability::TextContainerBehavior"
        }
      ]
    }
  ],
  "externalEvents": [],
  "eventsFunctionsExtensions": [],
  "externalLayouts": [],
  "externalSourceFiles": []
}